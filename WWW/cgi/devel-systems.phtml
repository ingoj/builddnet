#!/usr/bin/python

import psycopg
from os import linesep
from string import *
from time import *
import cgi, sys
import popen2

homedir="/home/builddnet"
f = open(homedir+"/conf.d/database.conf")
while 1:
	line = f.readline()
	if len(line)==0: break
	#print line
	if line.count("host"):
		host = split(line,"=")[1]
	elif line.count("port"):
		port = split(line,"=")[1]
	elif line.count("username"):
		username = split(line,"=")[1]
	elif line.count("password"):
		password = split(line,"=")[1]
	elif line.count("database"):
		database = split(line,"=")[1]


dsn = "dbname=%s host=%s user=%s password=%s" % ( database, host, username, password )
db = psycopg.connect(dsn)
csr = db.cursor()

#flavour = sys.argv[1]
#arch = sys.argv[2]

#if flavour=="woody-backports.org": flavour="woodybackports"
#if flavour=="unstable-non-free": flavour="nonfree"
#if flavour=="woody-volatile": flavour="woodyvolatile"
#if flavour=="etch-volatile": flavour="etchvolatile"
#if flavour=="etch-secure": flavour="etchsecure"

#sqlcmd = "begin"
#csr.execute(sqlcmd)
sqlcmd = "select a.id, arch, name, host, model, cpu, ram, disk, admin, email, status, lastseen, interval, reason, building, buildingflavour, builddstatus, speed from status a, develsystems b where a.id=b.buildd and host like '%.buildd.net' and status<'999999' order by cpu desc, ram desc, name" 
#  and (buildingflavour='%s' or buildingflavour is Null or buildingflavour='unspecified')
csr.execute(sqlcmd)
sqlresult = csr.fetchall()
#print sqlresult

buildd=[]
bgcolor="#c0c0c0"


def ptracker(name, package):
	"""reads out data from ptracker DB"""
	
	packagename, version = split(package, "_", 1)
	
	sqlcmd = "select now()-begin from ptracker where state='nowbuilding' and buildd='%s' and packagename='%s' and version='%s'" % (name, packagename, version)
	csr.execute(sqlcmd)
	#print sqlcmd
	try:
		#print "in try 0"
		sqlresult = csr.fetchone()
		#print sqlresult
		buildtime = split(str(sqlresult[0]), ".")[0]
		#print buildtime
		#print type(buildtime)
	except:
		#print "in except 0"
		buildtime = ""
	return buildtime
	
print "Content-type: text/html"
print """
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<HEAD>
  <link rel="stylesheet" href="http://buildd.net/builddnet.css" type="text/css" />
  <TITLE>www.buildd.net - www.buildd.org - m68k.bluespice.org</TITLE>
</HEAD>
<BODY text="#000000" bgcolor="#FFFFFF" link="#0000FF" vlink="#800080" alink="#FF0000">
<!--H1 ALIGN=CENTER>www.buildd.net</H1-->
<br>
<center>
<table bgcolor="#f0f0f0" width=100%>
        <th>
                <font size=+3>Buildd.Net - developer systems</font>
        </th>
</table>
</center>
<br>
<p>
<table>
  <tr>
    <td valign="top">
	  <table bgcolor=#f0f0f0>
	    <th align="left" valign="top"><b>Menu:</b></th>
	    <tr><td valign="top"><a href="../index.html">Home</a></td></tr>
	    <tr><td><a href="../docs/faq.html">Buildd.Net FAQ</a></td></tr>
		<tr><td><a href="../docs/usefullinks.html">Useful Links</a></td></tr>
	    <tr><td><a href="../devel/index.html">Developer Systems</a></td></tr>
	    <tr><td><a href="../cgi/devel-systems.phtml">&nbsp;- Machines</a></td></tr>
	    <tr><td><a href="../devel/donations.html">&nbsp;- Donations</a></td></tr>
	    <tr><td><a href="../source/index.html">Source</a></td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td>&nbsp;</td></tr>
		<tr><td><form action="http://www.buildd.net/cgi/package_status" method=get>
			Package status:<br>
			<input type="text" name="unstable_pkg" size=10>
			<input type="submit" name="searchtype" value="all">
			</form>
		</td></tr>
	  </table>
	</td>
    <td>&nbsp;&nbsp;</td>
	<td valign="top">

"""
print """<p>
<table border=0 cellspacing=2 cellpadding=2>""" # % arch
print  """
	<tr bgcolor="%s">
		<td><b>H B</b></td>
		<td><b>Name:</b></td>
		<td><b>Host:</b></td>
		<td><b>Model:</b></td>
		<td><b>CPU:</b></td>
		<td><b>RAM:</b></td>
		<td><b>Disk:</b></td>
		<td><b>p/d:</b></td>
		<td><b>Admin:</b></td>
		<td><b>Building | <font color="#FF0000">Reason:</font></b></td>
		<!--td><b>hh:mm:ss:</b></td-->
	</tr>
"""	% bgcolor
j = 0
k = 0
for i in sqlresult:
	machine			= 	list(i)
	bid 			=	machine[0]
	arch			=	machine[1]
	name			=	machine[2]
	host			=	machine[3]
	model			=	machine[4]
	cpu 			= 	machine[5]
	ram 			=	machine[6]
	disk			=	machine[7]
	admin			=	machine[8]
	email			=	machine[9]
	status			=	machine[10]
	lastseen		=	machine[11]
	interval		=	machine[12]
	reason			=	machine[13]
	building		=	machine[14]
	buildingflavour =	machine[15]
	builddstatus 	=	machine[16]
	speed	 		=	machine[17]
	
	try:
		foo=len(building)
		building=replace(building, " ", "+")
	except:
		building="" 
	try:
		bar=int(builddstatus)
	except:
		builddstatus=0 
	
	if status<=99999:
		if status<10:
			#sqlcmd = "update status set reason='8 weeks w/o response' where (lastseen+interval'8 weeks')<now() and status<>'99999'"
			#csr.execute(sqlcmd)
			#sqlcmd = "update status set reason='delisted in 1 week' where (lastseen+interval'11 weeks')<now() and status<>'99999'"
			#csr.execute(sqlcmd)
			#sqlcmd = "update status set reason=Null, status='99999' where (lastseen+interval'12 weeks')<now()"
			#csr.execute(sqlcmd)

			sqlcmd = "select now(), lastseen + 1.25*(select interval from status where name='%s'), lastseen + 4*(select interval from status where name='%s') from status where name='%s'" % (name, name, name)
			csr.execute(sqlcmd)
			res = csr.fetchone()
			now = res[0]
			warn = res[1]
			timeout = res[2]
			if (now>warn and now<timeout):
				status=1
				sqlcmd = "update status set status=1 where name='%s'" % name
				csr.execute(sqlcmd)
			if (now>timeout and timeout<>''):
				status=0
				sqlcmd = "update status set status=0 where name='%s'" % name
				csr.execute(sqlcmd)

			if (now<timeout and now<warn):
				sqlcmd = "update status set status=2 where name='%s'" % name
				csr.execute(sqlcmd)

			db.commit()
			#print name,now, warn, timeout

		j = j +1
		k = j % 2 
		if k == 1:
			bgcolor="#f8f8ff"
		else:
			bgcolor="#e0e0f0"
		print '    <tr bgcolor=%s>' % bgcolor	
		print '       <td align="left">'
		
		# host-centric LEDs:		
		if (status<=0 or status==10 or status==20):
			hstatus = "down"
			print '         <img src="http://buildd.net/pix/red.png" alt="down">'
		elif (status==1 or status==11 or status==21):
			hstatus = "noresp"
			print '         <img src="http://buildd.net/pix/yellow.png" alt="no response">'
		elif (status==2 or status==12 or status==22):
			hstatus = "up"
			print '         <img src="http://buildd.net/pix/green.png" alt="up">'
		elif status==99999:
			hstatus = "notpart"
			print '         <img src="http://buildd.net/pix/grey.png" alt="not participating">'
		
		# buildd-centric LEDs:
		if (hstatus == "up" or hstatus == "noresp"):
			if builddstatus==-1:
				print '         <img src="http://buildd.net/pix/red.png" alt="down">',
			elif (builddstatus==0 and len(building)==0):
				print '         <img src="http://buildd.net/pix/grey.png" alt="idle">',
			elif (builddstatus==0 and len(building)<>0):
				print '         <img src="http://buildd.net/pix/green.png" alt="building">',
			elif builddstatus==1:
				print '         <img src="http://buildd.net/pix/green.png" alt="building">',
			elif builddstatus==2:
				print '         <img src="http://buildd.net/pix/yellow.png" alt="NO-DAEMON-PLEASE">',
			elif (status>=10 and status<20):
				print '         <img src="http://buildd.net/pix/purple.png" alt="need key">',
			elif (status>=20 and status<99999):
				print '         <img src="http://buildd.net/pix/blue.png" alt="need setup">',
		else:
				print '         &nbsp;', #<img src="http://buildd.net/pix/blue.png" alt="need setup">',
			
		
		print '       </td>'
		if (hstatus=="notpart" or str(buildingflavour)=="None"):
			print '       <td>%s</td>' % ( name )
		else:
			print '       <td><a href="http://buildd.net/cgi/hostpackages.cgi?%s_arch=%s&searchtype=%s">%s</a></td>' % ( buildingflavour, arch, name, name )
		print '       <td>%s</td>' % host
		print '       <td>%s</td>' % model
		print '       <td>%s</td>' % cpu
		print '       <td align="right">%sM</td>' % ram
		print '       <td align="right">%sG</td>' % disk
		print '       <td align="right">%.2f</td>' % speed
		print '       <td><a href="mailto:%s">%s</a></td>' % (email, admin)
		print '       <td>'
		try:
			if len(building)<>0:
				if buildingflavour==flavour:
					print '      <a href="http://buildd.net/cgi/ptracker.cgi?%s_pkg=%s&searchtype=%s">%s</a>' % ( buildingflavour, building, arch, building )
					#print '       %s' % building
				elif (buildingflavour=="unspecified" or buildingflavour==''):
					print ''
				else:
					print '%s' % buildingflavour
		except:
			print ''
		try:
			if (len(reason) and len(building)):
				print "&nbsp;|&nbsp;"
			else:
				pass
		except:
			pass
		try:
			if len(reason)<>0:
				print '       <font color="#FF0000">%s</font>' % reason
		except:
			print ''
		print '       </td>'
		#if (len(building)<>0 and buildingflavour==flavour):
		#	#print "in if"
		#	buildtime = str(ptracker(name, building))
		#	print '       <td>%s</td>' % buildtime 
		#	#print '       <td><a href="http://buildd.net/cgi/ptracker.cgi?%s_pkg=%s&searchtype=%s">%s</a></td>' % ( buildingflavour, building, arch, buildtime )
		#else:
		#	#print "in else"
		#	buildtime=""
		#	print '       <td></td>' 
		print '    </tr>'	

#db.commit()
print '</table>'
#print '<center><img src="http://buildd.net/pix/green.png"> up | <img src="http://buildd.net/pix/yellow.png"> no response | <img src="http://buildd.net/pix/red.png"> down | <img src="http://buildd.net/pix/purple.png"> wait for key | <img src="http://buildd.net/pix/blue.png"> need setup | <img src="http://buildd.net/pix/grey.png"> not participating | <a href="../docs/faq.html">FAQ</a></center>'
print '<center>the colors of the LEDs are explained in the <a href="http://www.buildd.net/docs/faq.html">FAQ</a></center>'
print """
<p>    </td>
  </tr>
</table>
<hr>
<!--a href="http://www.buildd.net/">back to buildd.net</a><br-->
Last modified: <SCRIPT language="JavaScript">document.write(document.lastModified)</SCRIPT>
<p>
</body></html>"""

